{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","form","role","id","map","option","label","htmlFor","type","name","value","onChange","e","Statistics","good","neutral","bad","total","countPositivePercentage","statistics","Notification","message","App","state","leaveFeedback","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,MAAQ,+BAA+B,MAAQ,iC,iBCAtGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCEb,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,0BAASC,UAAWC,IAAEC,QAAtB,UACKJ,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,K,oBCJE,SAASI,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC/C,OACI,mCACI,sBAAML,UAAaC,IAAEK,KAArB,SACI,sBAAKC,KAAK,QAAQ,gBAAc,QAAhC,UACI,mBAAGP,UAAWC,IAAEH,MAAOU,GAAG,QAA1B,mCACCJ,EAAQK,KAAI,SAACC,GAAD,OACT,wBAAoBV,UAAWC,IAAEU,MAAOC,QAAO,gBAAWF,GAA1D,UACI,uBACIF,GAAE,gBAAWE,GACbG,KAAK,QAAQC,KAAK,WAAWC,MAAOL,EACpCM,SAAU,SAACC,GAAOZ,EAAgBK,MAErCA,IANOA,a,oBCNrB,SAASQ,EAAT,GAA2E,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,wBAC3D,OACI,qBAAIvB,UAAWC,IAAEuB,WAAjB,UACI,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,U,qBCRG,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OACI,mBAAG1B,UAAWC,IAAEyB,QAAhB,SAA0BA,I,ICE5BC,E,4MAEJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,cAAgB,SAACnB,GACf,EAAKoB,UAAS,SAAAC,GAAS,sBAAQrB,EAASqB,EAAUrB,GAAU,O,wDAG9D,WACE,MAA+BsB,KAAKJ,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,M,6CAKzB,WACE,IAAQF,EAAQa,KAAKJ,MAAbT,KACR,OAAOc,KAAKC,MAAa,IAAPf,EAAaa,KAAKG,uBAAyB,I,oBAG7D,WACE,MAA+BH,KAAKJ,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAErB,OACE,qCACE,cAACxB,EAAD,UACE,cAACM,EAAD,CAAiBC,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAAiB2B,KAAKH,kBAG9E,cAAChC,EAAD,CAASC,MAAM,aAAf,SACiC,IAA9BkC,KAAKG,qBACJ,cAACjB,EAAD,CACAC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,KAAKG,qBACZZ,wBAAyBS,KAAKI,oCAE9B,cAACX,EAAD,CAAcC,QAAQ,kC,GAzCpBW,aAiDHV,IClDfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.57b470a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FeedbackOptions_form__9ivgf\",\"label\":\"FeedbackOptions_label__2vI6T\",\"title\":\"FeedbackOptions_title__1LdU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__JnqA1\",\"title\":\"Section_title__3ak2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__ORlpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1UZky\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <section className={s.section}>\r\n            {title && <h1 className={s.title}>{title}</h1>}\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback}) {\r\n    return (\r\n        <>\r\n            <form className = {s.form}>\r\n                <div role=\"group\" arial-labelby=\"title\">\r\n                    <p className={s.title} id=\"title\">Please leave feedback</p>\r\n                    {options.map((option) => (\r\n                        <label key={option} className={s.label} htmlFor={`radio-${option}`}>\r\n                            <input\r\n                                id={`radio-${option}`}\r\n                                type=\"radio\" name=\"feedback\" value={option}\r\n                                onChange={(e) => {onLeaveFeedback(option)}}\r\n                            />\r\n                            {option}\r\n                        </label>\r\n                    ))}\r\n                </div> \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\n\r\nexport default function Statistics({good, neutral, bad, total, countPositivePercentage}) {\r\n    return (\r\n        <ul className={s.statistics}>\r\n            <li>Good: {good}</li>\r\n            <li>Neutral: {neutral}</li>\r\n            <li>Bad: {bad}</li>\r\n            <li>Total: {total}</li>\r\n            <li>Positive feedback: {countPositivePercentage}%</li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    countPositivePercentage: PropTypes.number.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n    return (\r\n        <p className={s.message}>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\n\nclass App extends Component{\n    \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  \n  leaveFeedback = (option) => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));  \n    };\n  \n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n        \n  }\n  \n  countPositiveFeedbackPercentage() {\n    const { good} = this.state;\n    return Math.round(good * 100 / this.countTotalFeedback()) || 0;\n  }\n  \n    render() {\n      const { good, neutral, bad } = this.state;\n\n        return(\n          <>\n            <Section>\n              <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={this.leaveFeedback} />\n            </Section>\n            \n            <Section title=\"Statistics\">\n              {this.countTotalFeedback() !== 0 ?\n                <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={this.countTotalFeedback()}\n                countPositivePercentage={this.countPositiveFeedbackPercentage()}\n                /> :\n                <Notification message=\"There is no feedback\" />\n            }\n            </Section>  \n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}